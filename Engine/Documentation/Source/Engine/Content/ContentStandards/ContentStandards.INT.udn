Availability:Public
Title:External Content Development Standards
Crumbs: %ROOT%, Engine/Content
Description:Image assets used in Materials to apply to surfaces or drawn on-screen by the HUD.

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Content/ContentStandards:title%](Engine/Content/ContentStandards/ContentCreation.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/content_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Content/ContentStandards:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Content/ContentStandards:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Content/ContentStandards]
	[/PARAM]
[/OBJECT]
[/VAR]
[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine/Content/ContentStandards:title%](Engine/Content/ContentStandards/ContentCreation.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/content_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Content/ContentStandards:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Content/ContentStandards:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Content/ContentStandards]
	[/PARAM]
[/OBJECT]
[/VAR]


[TOC(start:2 end:2)]

## Overview

The following list should be considered construction standards for Unreal Engine content. Although your _personal_ projects may use any standard that you like, any content that you wish to distribute should follow these standards.

## Static Mesh (3D Models) Standards

* **File Format:** FBX.
* **Scale:** 1 Unreal Unit = 1 centimeter (cm).
* **Origin (pivot):** Should be located at a spot convenient for placement, generally at the center bottom of the object.
* **Orientation:** All models should have their _forward_ dimension facing in the direction of the **positive X-Axis**.
* **UV Layout (Texture coordinates):** Meshes may use overlapping UV patches to maximize texture usage. However, they should also have a separate UV channel, specifically for light maps, in which all UV patches are uniformly layed out without any overlapping. Note lightmap UVs can be generated within the [Static Mesh Editor](Engine\Content\Types\StaticMeshes\Editor), though creating them in your 3D package will provide extra editability.
* **Materials:** All meshes should have a corresponding Material applied to them.
* **Vertex Normals:** If the visual quality of your model requires custom vertex normals (a.k.a. Smoothing Groups), make sure those are exported from your 3D package and that you import them into UE4 when importing your content.
* **Max Vertex Count:** For mobile devices, each mesh should have a maximum of **65,535** vertices. On other platforms, such as PC, you are limited by console and should test accordingly.
* **Collisions:** Wherever applicable, meshes should have collisions applied to them. See the [Static Mesh Collision Reference](Engine\Physics\Collision\Reference) for further details.


## Skeletal Mesh (Meshes animated via a skeleton) Standards

* **File Format:** FBX.
* **Skeleton:** All Skeletal Meshes should have a corresponding compatible Skeleton asset. Skeletal Meshes with the same bone hierarchy may share a Skeleton asset, however.
* **Scale:** 1 Unreal Unit = 1 centimeter (cm).
* **Origin (pivot):** Should be located at a spot convenient for placement. For Skeletal Meshes, this is typically right between the feet.
* **Orientation:** All models should have their _forward_ dimension facing in the direction of the **positive X-Axis**.
* **UV Layout (Texture coordinates):** Meshes may use overlapping UV patches to maximize texture usage. However, they should also have a separate UV channel, specifically for light maps, in which all UV patches are uniformly layed out without any overlapping. Note lightmap UVs can be generated within the [Static Mesh Editor](Engine\Content\Types\StaticMeshes\Editor), though creating them in your 3D package will provide extra editability.
* **Materials:** All meshes should have a corresponding Material applied to them.
* **Vertex Normals:** If the visual quality of your model requires custom vertex normals (a.k.a. Smoothing Groups), make sure those are exported from your 3D package and that you import them into UE4 when importing your content.
* **Max Vertex Count:** For mobile devices, each mesh should have a maximum of **65,535** vertices. On other platforms, such as PC, you are limited by console and should test accordingly.
* **Collisions:** All Skeletal Meshes should have a corresponding Physics Asset. These can be generated during import into UE4. See the [Physics Asset Tool (PhAT) User Guide](Engine\Physics\PhAT\UserGuide) for more information.

## Textures

* **Formats:**
	[INCLUDE:Engine/Content/Types/Textures/Importing#supportedtextureformats]
* **Dimensions:** 
	* All textures should have dimensions that are powers of two (32, 62, 1024, 2048). 
	* If you want to make use of mipmaps, your texture should not exceed 4096px (4K).
	* Keep in mind that some GPUs have hardward limits of 8192px (8K).
	* **Epic authors most of its texture content at 2048px.**
* **Tips:**
	* It is often useful and efficient to store masking information in the alpha channel of your textures.
