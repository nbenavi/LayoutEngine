INTSourceChangelist:2413692
Availability:Public
Title:テクスチャのストリーミング
Crumbs: %ROOT%, Engine, Engine/Content, Engine/Content/Types, Engine/Content/Types/Textures
Description:プレイ中にテクスチャをメモリからロード、アンロードするためのシステム。


[TOC (start:2 end:3)]


## 概要

テクスチャのストリーミング システムは、マルチスレッド方式で優先度ベースとなっています。テクスチャ プールを使用する場合は (たとえば、コンソール上で)、優先度が高い他のテクスチャによってメモリが必要とされない限り、テクスチャはストリームアウトされません。このことによって、テクスチャのクオリティが安定し、無駄なディスク アクセスも防ぐことができます。

テクスチャの優先度は、主に距離によって決まります。ただし、時間や求められている解像度、強制によるものか否か (完全にストリームインするようにフラグが立っているか否か) といった要因も考慮されています。

ストリーミング システムは、定期的に、各ストリーミング テクスチャのための 2 つの値を計算します。その値とは、必要とされているミップレベルの数と優先度です。さらに、優先度に基づいて、すべてのテクスチャをソートするとともに、最も高い優先度をもつテクスチャから順に、すべてのテクスチャが、メモリ内に最低限、必要とされている数のミップレベルを確保できるように努めます。より多くのミップレベルをストリームインする必要のあるテクスチャが存在し、さらに、利用可能なメモリが十分でない場合は、システムが優先度の低いテクスチャのミップレベルからストリームアウトして、再度試みようとします。



## ストリーミングのタイプ

テクスチャがメモリ内にもつべきミップレベルの数を決定する際、ストリーミング システムは、数種類のヒューリスティックを使用します。通常、テクスチャでは 1 つのヒューリスティックしか使用されませんが、複数のヒューリスティックが使用される場合もあります。たとえば、静的メッシュとスケルタルメッシュで同一のテクスチャが使用されている場合などです。そのような場合は、使用されているヒューリスティックのうちで、最も高い結果 (必要とされるミップレベルの最も高い値) が選択されます。

必要とされるミップレベルの数は、ある有効な範囲にクランプ (固定) されています。この範囲は、多数の異なる要因によって決まります。たとえば、テクスチャ グループの LOD 設定値や、シネマティック ミップレベル、Xbox のパック化された mip-tail、global の最大最小の設定値 (GMinTextureResidentMipCount と GMaxTextureMipCount)、テクスチャが強制的に完全にロードされるか否か、といった要因があげられます。

ある種のテクスチャは、ストリーミング システムがトラック (追跡管理) できないため、通常のヒューリスティックによって処理されません。このことは、特に、エフェクト テクスチャに当てはまります。これらのテクスチャは、代替のヒューリスティックによって扱われます。そのヒューリスティックは、ここ 90 秒間にテクスチャがレンダリングされたか否かに基づいて、基本的にオールオアナッシングで処理します。ストリーミング システムがこれらのテクスチャをトラックしないため、他のジオメトリによってこのようなテクスチャが使用されると、問題が生じる場合があります。ストリーミング システムは、他のジオメトリの存在についてしか分からず、ヒューリスティックにのみ基づいてテクスチャをストリームしようとします。必要とされているミップレベルの数は、ジオメトリが遠くにあると低くなります。そのことは、同じテクスチャを使用するエフェクトがカメラのそばにあっても変わりません。このような場合は、同じテクスチャを使用しないようにします。



### ストリームタイプ Static (静的)

このストリームタイプは、アンリアル エディタのレベルに配置されたすべての静的オブジェクトに使用されます。基本的に距離ベースとなっています。すなわち、スクリーン上に占めるテクスチャのピクセル数を概算し、その解像度に合わせるのに必要となるミップレベルを導き出します。 



### ストリームタイプ Dynamic (動的)

スケルタルメッシュやスポーンされたオブジェクトのような動的なオブジェクトの上にあるテクスチャは、動的なヒューリスティックを使用します。静的なストリームタイプと非常に良く似ていますが、このストリームタイプは、アタッチ / デタッチ、および、位置とバウンディング ボックスの変更をトラックし、それにしたがって計算を更新します。



### ストリームタイプ Forced (強制)

bForceMipStreaming フラグが設定されているオブジェクト上のテクスチャ、および、ブループリントまたはゲームコードによって強制 (forced) されているテクスチャは、WantedMips (必要とされるミップレベル) が最大値にセットされます。これらのテクスチャは、通常よりも高い優先度をもつため、あらゆるミップレベルが可能な限り早くストリームインされます。Forced 型テクスチャは、普通、タイマーを使用して、タイマーが切れたときに自動的に通常のストリーミング動作に復帰します。タイマーは、便宜のために、強制のフラグを無効にし忘れるのを防ぐための予防措置として用意されています。タイマーをかなり大きめの数値にセットすると、意図した時間帯を確実にカバーすることが可能となります。ただし、不要と判明した時点で手動で無効にすることは大切です。この Forced タイプを不要になり次第無効にすべきである理由は、Forced タイプのテクスチャが多くのテクスチャ用メモリを占有し、他のテクスチャをストリームアウトさせることになるためです。Forced タイプのテクスチャの使用状況は、STAT STREAMINGDETAILS (統計情報 ストリーミング詳細) または LISTSTREAMINGTEXTURES (ストリーミング テクスチャのリスト) を使ってモニターすることができます。



### ストリームタイプ LastRenderTime (最終レンダリング時間)

テクスチャがストリーミング システムによってトラックされず、通常のヒューリスティックによって処理されない場合は、LastRenderTime ヒューリスティックが使用されることになります。このヒューリスティックは非常に単純です。テクスチャがレンダリングされたときにすべてのミップレベルをストリームインするとともに、原則として、テクスチャをレンダリングする必要がなくなったら (例 : テクスチャがカメラの背後に回った場合、他のジオメトリによってオクルードされた場合、シーンの一部ではなくなった場合など)、ミップレベルがその後メモリに 90 秒間保存されます。

このストリームタイプは、通常、パーティクル エフェクトでのみ使用されるもので、取り扱いには注意が必要です。メモリ使用量をモニターするには、STAT STREAMINGDETAILS (統計情報 ストリーミング詳細) または LISTSTREAMINGTEXTURES (ストリーミング テクスチャのリスト) を使用します。



### ストリームタイプ Orphaned (孤立)

ストリーミング システムが最近テクスチャをトラックできなくなったが (原因例 : レベル遷移に入ったため、あるいは、動的なオブジェクトがデスポーンされたばかりであるため)、テクスチャが依然として存在している場合は、即座に LastRenderTime のストリームタイプを使用するのではなく、しばらくの間 _Orphaned_ (孤立) タイプとなります。この間、現在有しているミップレベル数 (または、最大値から 1 を減じた数のミップレベル数。いずれか少ない方が取られます) が維持されることになります。こうすることによって、遷移する場合にすべてのミップレベルを一時的にテクスチャがストリームインするようなことがなくなります。テクスチャがレンダリングされたばかりで、LastRenderTime のタイプが使われると、全ミップレベルがストリームインされてしまいます。テクスチャが再びトラックされるようになるか、メモリから削除されるまでは凍結しておく、という考え方なのです。



## デカール

レベルに配置された静的なデカールは、Static (静的) のストリームタイプを使用します。実行時にスポーンされる動的なデカールは、LastRenderTime を使用します。デカールが静的オブジェクトと動的なオブジェクトの両方で使用される場合は、特に注意が必要です。このような場合は、LastRenderTime が優先されて、テクスチャ共有に関するパーティクル エフェクトの問題を回避することになります。



## 事前ストリーミング テクスチャ

テクスチャが必要となる前にストリームインを開始する方法はいくつかあります。レベルにフルスクリーンのローディング ムービーがロードされ、そのローディング ムービーが停止すると、ストリーミング システムが自動的に CPU をブロックして、その時点での設定 (カメラおよびプレイヤーの位置、ロードされてビジブルなジオメトリなど) に基づいて、必要なテクスチャすべてをストリームインします。これに要した時間、および、この時間にストリームインしたテクスチャ数に関する行がログに加えられることになります。.ini 設定項目によって、ブロックを実施する時間の制限を設定することができます (TextureStreaming -> LoadMapTimeLimit)。これは、必要な場合にいつでも手動で呼び出すことができます。(IStreamingManager::Get().StreamAllResources)

特定のテクスチャまたはメッシュを、ゲームコードで強制的にメモリに入れることによって、あらかじめストリームさせることができます。それには、PrestreamTextures() 関数を呼び出します。指定された時間の間、テクスチャがまだ使用されていなくても、すべてのミップレベルがロードされます。ミップレベルが使用され始めると、再び通常と同じようにストリーミング システムに処理されるようになります。

新たな位置にまもなくテレポートすることがゲームコードに分かっている場合は、新たな視点位置 (view location) をストリーミング システムに追加できます。そのためには、IStreamingManager::Get().AddViewSlaveLocation() を呼び出します。ストリーミング システムは、これらの追加された位置と通常のカメラ視点位置の両方を、同じように処理します。すなわち、これらすべての位置に置かれたテクスチャをストリームすることになります。

ゲームプレイおよびレベルが ブループリントによってストリームイン / アウトされている間は、Stream-In-Textures Blueprint アクションノードを使用して、事前ストリーミングを慎重にブループリントで処理する必要があります。このノードは、PrestreamTextures() や AddViewSlaveLocation() 関数とまったく同じように使用することができます。ストリーミング システムの考慮の対象となるためには、レベルがロードされていてビジブルになっている必要があることを忘れないでください。

Stream-In-Textures Blueprint ノードには、All Loaded (すべてロードされる) output もあります。これがトリガーされるのは、必要なテクスチャがすべてロードされた場合か、あるいは、指定された時間が経過した場合です (どちらか先に満たされた方) 。必要に応じて、ローディング スクリーンをトリガーするために使用することができます。なお、テクスチャの割り当て量をオーバーすると、必要なテクスチャの一部しかメモリに入れることができなくなり、まったくロードされなくなります。したがって、適切な時間制限を設定するようにしなければなりません。(このビヘイビアは将来変更される可能性があります。すなわち、このような特殊な事態を避けるために、ロード _可能な_ テクスチャがすべてロードされた時に、トリガーされるように変更される可能性があります)。 



## ブースト

特定の視点位置 (view location) または特定のアクタをブーストすることができます。ブースト係数が 1.0 の場合は、通常の動作です。係数の値が大きくなるほど、よりアグレッシブになり、関連するテクスチャで必要となるミップレベル数がブーストされます (引き上げられます)。これによって、カメラがあたかも接近したかのような効果が生じます。係数の値を下げると、アグレッシブの度合いも下がり、必要とされているミップレベルの数も抑制されます。

ブースト係数は、自動的に 1.0 にリセットされます。したがって、フレームごとにブースト係数をセットし続ける必要がありますが、ブースト係数が必要なくなったときは、セットするのを止めれば済みます。

このブースト係数を使用して、まもなくズームすることになっている (あるいは、すでにズームインされている) ビューのために、特定の重要なキャラクターや事前ストリームされたテクスチャをアグレッシブにブーストすることができます。



## TexelFactor (テクセル係数)

TexelFactor は、必要とされるミップレベルの数に直接影響します。この係数の値が高くなるほど、ストリームインされるミップレベルの数が多くなります。この値は、クック時に自動的に事前計算されます。その際、メッシュ内のすべてのトライアングルが調べられ、UV マップとトライアングルのサイズの比率が考慮されます。ただし、コンポーネント上の **StreamingDistanceMultiplier** (ストリーミング距離乗数) プロパティをセットすることによって、手動で調整することも可能です。ここでも、値を高くすると、ストリームインされるミップレベルの数が増えます。StreamingDistanceMultiplier が 2.0 になると、TexelFactor が 2 倍になります。StreamingDistanceMultiplier が 0.5 になると、TexelFactor が半分の大きさに下がります。実行時における TexelFactor の効果を調べるには、InvestigateTexture (テクスチャの調査) または ListStreamingTextures (ストリームしているテクスチャのリスト) を使用します。 



## シネマティック ミップレベル

通常のゲームプレイではない場合に、テクスチャは、シネマティック専用の特別に高い解像度のミップレベルを使用することができます。シネマティック用ミップレベルの数は、テクスチャのプロパティで設定されます。これらのシネマティック用ミップレベルを有効にするには、Stream-In-Textures Blueprint アクションを使用することによって、テクスチャグループのためにミップレベルを有効にするとともに、 _なおかつ_ テクスチャを強制ストリームします。C++ で、UTexture2D::SetForceMipLevelsToBeResident() を呼び出すことによっても有効にすることができます。



## 特別なテクスチャ グループ

特別な処理が可能なテクスチャ グループがいくつかあります。TEXTUREGROUP_Skybox テクスチャは、常に完全にストリームインされます。自動的に _Forced_ (強制) となります。TEXTUREGROUP_UI テクスチャは、クック時にあらゆるミップレベルが削除されるため、決してストリームされることがありません。TEXTUREGROUP_Lightmap と TEXTUREGROUP_Shadowmap は、.ini 設定項目にある追加ブースト係数 (LightmapStreamingFactor および ShadowmapStreamingFactor) を使用します。3 つの TEXTUREGROUP_Character グループのいずれかを使用しているテクスチャは、マップがロードされる際に最初にストリームインされ、パニック ストリームアウトにおいて最後にストリームアウトされるという点で、若干優先度が高くなっています。



## パニック ストリームアウト 

当初、テクスチャが同時に作成されると (通常はごく少数のミップレベルをともなって)、何とかメモリに格納されるか、ゲームが Out Of Texture Memory (テクスチャのメモリが不足している) 状態となります。十分なメモリがない場合は、ストリーミング システムが、テクスチャをストリームアウトすることによって空きを作ろうとします。その際、いろいろと考慮して処理する時間がないため、ストリームアウトできるものは何でもストリームアウトすることによって、テクスチャ プールに空きを作ることになります。この作業は若干時間がかかる場合があります。その理由は、大量のテクスチャを調べ、テクスチャ プールのメモリをデフラグすることによって、連続する空きを作らなければならないからです。この作業が行われると必ずログに一行加わります。



## テクスチャ ストリーミングの最適化とデバッグ

最初に調べるべきところは、STAT STREAMING (統計 ストリーミング) にある Over Budget (配分オーバー) です。これが 0 になっていれば問題ありません。0 以外の場合は、テクスチャ プールに入れることができるよりも多くのテクスチャを使っていることになり、メモリ使用量を減らすか、テクスチャ プールのサイズを増やさなければなりません (あるいはその両方を実行します)。0 以外の Over Budget であっても容認できるケースがあります。ストリーミング システムが優先度に基づくため、ビジュアルのクオリティにまったく問題がない場合です。

メモリ使用量削減対象の候補を見つけるには、ListStreamingTextures および ListTextures コンソール コマンドを使用します。なお、テクスチャ プール メモリは、ストリームしているテクスチャ (使用量が時間経過とともに変化する) とストリームしていないテクスチャ (使用量は比較的一定である) の両方によって使用されます。ListStreamingTextures コマンドを使用すると、ストリームしているテクスチャとストリーミング システムの情報をリスト表示することができます。ListTextures コマンドを使用すると、すべてのテクスチャをリスト表示することができますが、表示される情報は一般的なものとなります。

不必要に Forced (強制) または LastRenderTime (最終レンダリング時間) とされているテクスチャ、および、過剰に大きいテクスチャを探すには、ListStreamingTextures をチェックします。さらにテクスチャを共有化できないかということ、および、実際には必要のないユニークなテクスチャを削除できないかということについて調べる必要があります。不必要に大きいテクスチャを調整するには、LODBias または StreamingDistanceMultiplier プロパティを変更します。メモリの負担になるシネマティック用ミップレベルが不必要に使用されていないかチェックします(テクスチャは Forced とされているはずです)。

ListTextures をチェックして、ストリームされていないテクスチャでメモリを大量に使っているものがないか調べ、必要に応じて最適化します。

特定のテクスチャを調べるには、TrackTexture <name> および InvestigateTexture <name> コンソール コマンドを使用します。予期しないストリームアウトがないか、あるいは、変化を検知しそこなっていないかチェックします。WantedMips (必要とされているミップレベル) が予期したものであるかどうかをチェックします。予期したストリームタイプを使用しているかチェックします。テクスチャ インスタンス (テクスチャが使用されるあらゆる部分) がすべて説明つくかどうかをチェックします。トラックされていないテクスチャ (例 : パーティクル エフェクト テクスチャ) が、通常のトラックされているインスタンス (例 : 静的メッシュ) によって共有されていないことをチェックします。

新たなマップをロードする際に、テクスチャがブラーする場合は、ローディング スクリーン (フルスクリーンのローディング ムービーを使用していることを確認してください) が無効になって、FStreamingManagerCollection::StreamAllResources() が呼び出されたときに、視点位置 (View Location) が正しい位置にあるか確認します。その時点でデータが完全にロードされているか確認します。



## .ini 設定項目

.ini 設定項目はすべて TextureStreaming のセクションに含まれています。

| プロパティ | 説明 |
| --- | --- |
| **PoolSize** | テクスチャ プールのサイズです。単位は MBです。 |
| **MemoryMargin** | 空けておくべきメモリの量です。新たなデータをストリームインする際に一時メモリとして使用されるものです。単位は MB です。 |
| **LoadMapTimeLimit** | ローディング スクリーンの最後にすべてのテクスチャをストリームインする際にブロックする最大秒数です。 |
| **LightmapStreamingFactor** | TEXTUREGROUP_Lightmap テクスチャのための付加的ブースト係数です。 |
| **ShadowmapStreamingFactor** | TEXTUREGROUP_Shadowmap テクスチャのための付加的ブースト係数です。 |
| **BoostPlayerTextures** | プレイヤー キャラクター上にあるすべてのテクスチャに、自動的に適用されるブースト係数です。 |



## Stat Streaming (統計ストリーミング)

| プロパティ | 説明 |
| --- | --- |
| **Game Thread Update Time** | ゲームスレッドにおいて、フレームごとに使用される時間です。 |
| **Pool Memory Used** | テクスチャプールから現在割り当てられているメモリの総計です (ストリームしているテクスチャだけではありません)。 |
| **Required Streaming Textures** | ストリーミングしている全テクスチャのために必要となるメモリの総計です。 |
| **Streaming Textures** | テクスチャプールから現在割り当てられているメモリの総計です。(ストリーミングしているテクスチャだけを対象としています)。 |
| **Over Budget** | 割り当て量を超過しているテクスチャメモリの推計量です (ストリームしているテクスチャだけを対象としています)。 |
| **Num Wanting Textures** | 現在ミップレベルをストリームインする必要があるテクスチャの数です。 |
| **Streaming Textures** | メモリ内にあるストリームしているテクスチャの総数です。 |



## Stat StreamingDetails (統計 ストリーミングの詳細)

| プロパティ | 説明 |
| --- | --- |
| **Under Budget** | 割り当て量を下回っているテクスチャ メモリの推定量です(ストリームしているテクスチャだけを対象としています)。 |
| **Rendering Thread Update Time** | レンダリング スレッドにおいて、テクスチャを更新するのにフレームごとに使用される時間です。 |
| **Rendering Thread Finalize Time** | レンダリング スレッドにおいて、テクスチャをファイナライズするのにフレームごとに使用される時間です。 |
| **Static Textures In Memory** | Static (静的な) タイプのテクスチャのために使用されている現在のメモリ総量です。 |
| **Dynamic Textures In Memory** | Dynamic (動的な) タイプのテクスチャのために使用されている現在のメモリ総量です。 |
| **LastRenderTime Textures In Memory** | LastRenderTime (最終レンダリング時間) タイプのテクスチャのために使用されている現在のメモリ総量です。 |
| **Forced Textures In Memory** | Forced (強制) タイプのテクスチャのために使用されている現在のメモリ総量です。 |
| **Lightmaps In Memory** | ライトマップおよびシャドウマップのために使用されている現在のメモリ総量です。 |
| **Lightmaps On Disk** | 現在アクティブなテクスチャについて、ディスク上で使用可能なライトマップおよびシャドウマップの総量です。 |
| **Intermediate Textures Size** |ストリームイン / アウトしているテクスチャのために使用されている現在の一時メモリ量です。 |
| **Textures Streamed In (Frame)** | このフレームでストリームインされたテクスチャの数です。 |
| **Textures Streamed In (Total)** | 起動以来ストリームインされたテクスチャの数です。 |
| **Lightmaps Streamed In (Total)** | 起動以来ストリームインされたライトマップおよびシャドウマップの数です。 |
| **Intermediate Textures** | ストリームイン / アウトのために使用されている現在の一時テクスチャの数です。 |
| **Requests In Cancelation Phase** | キャンセル段階にあるリクエストの数です。 |
| **Requests In Update Phase** | ミップレベルの更新段階にあるリクエストの数です。 |
| **Requests In Finalize Phase** | ミップレベルのファイナライズ段階にあるリクエストの数です。 |
| **Streaming Latency, Average (sec)** | リングバッファ内にあるすべての遅延サンプルの平均です。(単位は秒)。 |
| **Streaming Bandwidth, Average (MB/s)** | 平均帯域幅使用量です。(単位は、MB/ 秒)。 |
| **Growing Reallocations** | 起動以降増加したインプレースによる再割り当ての総数です。 |
| **Shrinking Reallocations** | 起動以降減少したインプレースによる再割り当ての総数です。 |
| **Full Reallocations** | 完全な再割り当て (テクスチャのコピーを含む) の総数です。 |
| **Failed Reallocations** | 起動以降失敗した再割り当て (暗黙のうちに無視されたストリーム操作) の総数です。 |
| **Shrinking Reallocations** | 起動以降のパニック デフラグの総数です。 |
| **Num Textures Instances** | テクスチャ インスタンスの現在の数です。 |
| **Num Lightmap Instances** | ライトマップ インスタンスおよびシャドウマップ インスタンスの現在の数です。 |
| **Dynamic Streaming Total Time (sec)** |起動以降、動的プリミティブに費やされてきた累計時間です。(単位は秒)。 |



## コンソール コマンド

| プロパティ | 説明 |
| --- | --- |
| **STAT Streaming** | テクスチャ ストリーミング システムに関する情報を表示します。 |
| **STAT StreamingDetails** | テクスチャ ストリーミング システムに関する詳細な追加情報を表示します。 |
| **ListStreamingTextures <partial-name>** | <partial (部分的) -name (名前)> に一致する全ストリーミング テクスチャのリストをプリントします。このリストに含まれる情報は、つぎのようになります。すなわち、現在のサイズ、何秒前にレンダリングされたか、どのストリーミング ヒューリスティックを使用しているかなどです。形式は CSV であるため、Excel にコピー / ペーストしてさらに調べることができます。
| **InvestigateTexture <partial-name>** | 特定の文字列 <partial-name> を含むすべてのテクスチャに関してストリーミング システムがもっている全情報をプリントします。 |
| **TrackTexture <partial-name>** | 特定の文字列 <partial-name> を含むすべてのテクスチャをストリーミング システムが追跡開始し、ステータス変化のログを取ります。 |
| **UntrackTexture <partial-name>** | 追跡されたテクスチャのリストから特定のテクスチャを取り除きます。 |
| **ListTrackedTextures** | 現在追跡されているテクスチャのリストをプリントします。 |
| **TextureGroups** | 全テクスチャグループのメモリ情報をプリントします。 |
| **DumpTextureStreamingStats** | テクスチャ ストリーミング システムのメモリ情報をプリントします。 |

 




