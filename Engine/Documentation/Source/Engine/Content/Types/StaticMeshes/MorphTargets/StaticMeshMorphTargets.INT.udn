Availability:Public
Title:Static Mesh Morph Targets
Crumbs:%ROOT%, Engine, Engine/Content, Engine/Content/Types/StaticMeshes
Description:Deforming a StaticMesh using morph targets and WorldPositionOffset.

[TOC(start:2)]

Morph targets provide a way to deform a mesh from its base form towards a _target_ form. 
Generally, these are used with SkeletalMeshes as part of the Animation system; however, 
using the `StaticMeshMorpher.ms` maxscript and the **StaticMeshMorphtarget** 
[Material Function](Engine/Rendering/Materials/Functions), 
StaticMeshes also have the ability to be setup for deformation using morph targets.

This method performs the deformation by using multiple UV channels, vertex colors, and the **WorldPositionOffset**.
The offsets of the vertices for each morph target are stored as vertex colors in a UV channel. 
The **StaticMeshMorphTarget** Material Function then extracts these and makes them available 
within the Material. By passing them to the **WorldPositionoffset** input of the material, 
the vertices of the mesh can be transformed to the positions of the vertices in the morph target.

## Script Setup and Installation

The `StaticMeshMorpher.ms` maxscript is located in your build at `UE4/Engine/Extras/FX_tools/3DSMax2012_x64/`. 

**To run the** `StaticMeshMorpher.ms` **maxscript:**

1. In 3dsMax, in the **MAXScript** menu choose **Run Script...**.

1. Navigate to the location of the `StaticMeshMorpher.ms` maxscript in your build and open it.

1. The script's interface is displayed and ready to be used.


[REGION:tip]
The script can also be bound to a key combination or added to a custom menu to make running it faster and easier.
[/REGION]

## Creating Morph Targets

Morph targets require multiple instances of the same mesh with their vertices transformed. For example, 
a melting ball of ice could have three forms:

[REGION:imagetable]
| ![Game Model](game_model_table.png) | ![Morph target 1](morph_1_table.png) | ![Morph target 1](morph_2_table.png) |
| ------ | ------ | ------ |
| Game Model | Morph Target 1 | Morph Target 2 |
[/REGION]

The morph targets are packed into UV channels 2 and 3 (assuming two morph targets are being packed), 
and the normals for morph target 1 can also be stored in the mesh's vertex colors if desired.

**To pack morph targets:**

1. Press the ![Pick Game Mesh](button_pick_gamemesh.png) button and then select the game model mesh in the scene.

	![Game Mesh Selected](game_mesh_selected.png)

1. Press the ![Pick Morph Target 1](button_pick_morph1.png) button and then select the mesh for the first morph target in the scene.

	![Morph Target 2 Selected](morph_1_selected.png)

1. Repeat the process above for the second morph target in the scene, if one exists.

	![Morph Target 2 Selected](morph_2_selected.png)

1. Check the **Store Morph 1 Normals** checkbox if desired.

1. Press the ![Pack Morph Targets](button_pack_morphs.png) button to begin the process of packing the morph targets into the UV channels.

	![Morph Packing Progress](processing_progress.png)

1. The mesh can be exported from 3dsMax and imported into Unreal normally. See [](Engine/Content/FBX/StaticMeshes) for details on this process.


## Material Setup

The _StaticMeshMorphTargets_ function provides access to the morph targets and normals inside the _Material_ applied to the _StaticMesh_. 
This function has two outputs corresponding to the two morph targets and one output for the normals. The morph target outputs provide 
values that can be plugged into the **WorldPositionOffset** input channel of the _Material_ node, while the normal output, as you might expect, 
can be connected to the _Normal_ input channel of the _Material_ node.

In order to allow for _morphing_ between the base mesh and the morph targets, one or more _LinearInterpolate_ expressions are used 
with a single _ScalarParameter_ driving the **Alpha** input. This allows the morph targets to be driven at runtime by gameplay code or 
Matinee.

An example setup (only the morph network) is shown here:

![](morph_material_setup.png)

The result as the _Time_ parameter in the network above goes from 0 to 1 is shown below:

![](morph_result.png)
