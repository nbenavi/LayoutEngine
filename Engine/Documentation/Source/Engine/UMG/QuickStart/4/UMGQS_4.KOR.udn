INTSourceChangelist:2426079
Availability: Public
Title:4. 탄약, 생명력, 에너지 표시하기
Crumbs:%ROOT%, Engine, Engine/UMG, Engine/UMG/QuickStart
Description:UMG 퀵스타트의 네 번째 단계는 탄약, 생명력, 에너지가 게임내 표시되도록 걸어주는 것입니다.


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[예전 단계](Engine/UMG\QuickStart\3 "%Engine/UMG\QuickStart\3:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[퀵 스타트 홈](Engine/UMG\QuickStart) 
	[/PARAM]
	[PARAM:next]
		[다음 단계](Engine/UMG\QuickStart\5 "%Engine/UMG\QuickStart\5:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

---
[OBJECT:TopicList]
	[PARAM:icon]
		![](%ROOT%/build_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		HUD 요소 만들기
	[/PARAM]
	[PARAM:description]

이번 섹션에서는 HUD 에 표시하려는 요소를 추가하도록 하겠습니다.

1. 생성한 **UMG** 폴더 안에서 **GameHUD** 블루프린트를 열어 **위젯 블루프린트 에디터** 에서 (아래와 같이) 엽니다.
	
		![](New_1.png)(w:720)

1. **팔레트** 창에서 **패널** 아래 **Horizontal Box** 를 끌어 **계층구초** 창의 **CanvasPanel** 위에 놓습니다.

		![](UMG_Update1.png)

1. 또 **패널** 아래, **Vertical Box** 두 개를 끌어 **계층구조** 창의 **Horizontal Box** 위에 놓습니다.

		![](UMG_Update2.png)

1. **일반** 아래, **Text Block** 을 두 개 끌어 첫 번째 **Vertical Box** 에 놓고, **Progress Bar** 를 두 개 끌어 두 번째 **Vertical Box** 위에 놓습니다. 

		![](UMG_Update3.png)

1. **Horizontal Box** 를 선택한 채로 박스 크기를 조절하여 창 좌상단 구석에 나타나도록 합니다.

		![](UMG_Update4.png)

		진행상황 막대가 매우 작아 보입니다만, 다음 단계에서 고쳐주겠습니다.

1. **Progress Bar** 하나를 클릭한 다음 **디테일** 패널에서 **Layout** / **Size** 에서 **채우기** 버튼을 클릭합니다.

		![](UMG_Update5.png)

1. 다른 **Progress Bar** 를 클릭한 다음 전에 했던 대로 **Size** 에서 **채우기** 로 설정합니다.

1. **Progress Bar** 들이 들어있는 **Vertical Box** 를 선택한 다음 그 **Size** 역시 **채우기** 로 설정합니다.

		![](UMG_Update6.png)

1. 완료되면 **비주얼 디자이너** 에서 아래와 같이 박스 크기를 조절합니다.

		![](UMG_Update7.png)

1. **Text Block** 을 클릭한 다음 **디테일** 패널에서, Text 를 **Health :** 로 입력하고 오른쪽 정렬합니다.

		![](UMG_Update8.png)

1. 나머지 **Text Block** 에도 같은 작업을 해 줍니다. Text 에는 **Energy :** 라 입력합니다. 

1. 레퍼런스를 위해 **Horizontal Box** 를 선택한 다음 **디테일** 패널에서 그 이름을 **PlayerCondition** 로 변경합니다.

		![](UMG_Update9.png)

1. **팔레트** 에서 **Horizontal Box** 를 또 하나 끌어 **계층구조** 의 **CanvasPanel** 에 놓습니다.

1. **Text Block** 을 네 개 끌어 새로운 **Horizontal Box** 위에 놓은 다음, 각각의 Text 에 다음과 같이 입력합니다: **Ammo :**, **25**, **/**, **25**. 

		![](UMG_Update10.png)

1. **Appearance** 와 **Font** 아래, 각 텍스트에 대한 폰트 크기를 변경할 수 있습니다 (저희는 각 32 로 설정했습니다).

		![](UMG_Update11.png)

1. Ammo 표시용 **Horizontal Box** 를 끌어 화면 우상단 부분에 놓은 다음 크기를 원하는 대로 조절합니다.

		![](UMG_Update12.png)

1. **Horizontal Box** 를 선택한 채로 **디테일** 패널에서, **앵커** 버튼을 클릭한 다음 우상단 앵커를 선택합니다.

		![](UMG_Update13.png)(w:800)

		위젯 **앵커** 설정을 통해, 그 위젯이 지정된 위치에 또는 화면 크기에 따라 그 위치에 상대적으로 표시됨을 나타냅니다. **비주얼 디자이너** 에서 **해상도** 드롭다운 메뉴를 클릭한 다음 종횡비를 바꿔보면 확인할 수 있습니다. 위젯의 상대 위치가 유지되는 것을 확인할 수 있을 것입니다.

	[/PARAM]
[/OBJECT]

[OBJECT:TopicList]
	[PARAM:icon]
		![](%ROOT%/build_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		변수 값 구하기
	[/PARAM]
	[PARAM:description]

이번 섹션에서는 변수가 HUD 에 전달될 수 있도록 **MyCharacter** 블루프린트에서 그 변수를 걸어주도록 하겠습니다.

1. Health 를 나타내는 **Progress Bar** 를 클릭합니다.

1. **디테일** 패널에서 **Appearance** 아래, **Percent** 옵션 옆 **바인드** 버튼을 누른 다음 **바인딩 생성** 을 누릅니다.

		![](UMG_Update14.png)

		여기서 Progress Bar 의 Percent 값을 우리 캐릭터 블루프린트의 값에 바인딩하겠습니다.

1. 열리는 그래프에서 **우클릭** 한 다음 **Get Player Character** 노드를 검색하여 추가합니다.

1. **Get Player Character** 에서 끌어놓아 **Cast to MyCharacter** 노드를 추가하고 아래와 같이 연결합니다.

		![](UMG_Update15.png)

1. **As MyCharacter C** 핀을 끌어놓아 **Get P Health** 를 검색하여 추가하고 아래와 같이 연결합니다.

		![](UMG_Update16.png)(w:820)

		그러면 항상 우리 플레이어의 Health 에 연관된 값을 구하여 HUD 에 자동 전달해 줍니다.

1. **디자이너** 탭에서 Energy Progress Bar 를 클릭하고, Health 에 했던 것과 마찬가지로 Percent 에 대해 바인딩을 생성해 줍니다.

1. 열리는 그래프에서 **Get Player Character** 와 **Cast To MyCharacter** 한 다음, get P Energy 를 다음과 같이 연결합니다.

		![](UMG_Update17.png)(w:820)

1. **디자이너** 탭으로 돌아와 Ammo 표시의 첫 번째 숫자를 클릭하고, **디테일** 패널에서 **Text** 에 **바인딩 생성** 합니다. 

		![](UMG_Update18.png)

1. 열리는 그래프에서 **Get Player Character** 와 **Cast To MyCharacter** 한 다음, get P Current Ammo 하여 아래와 같이 연결합니다.

		![](UMG_Update19.png)(w:820)

		Ammo 를 ReturnNode 의 Return Value 에 연결할 때, 변환 노드가 자동으로 생성될 것입니다.

1. 아직 **그래프** 탭에 있을 때 **내 블루프린트** 창에서 **인티저** 변수를 새로 하나 만듭니다.

1. 변수에 대한 **디테일** 패널에서, 이름을 **H_MaxAmmo** 라 하고 **편집가능** 및 **스폰시 노출** 박스를 체크합니다.

		![](UMG_Update20.png)

		Max Ammo Count 값은 이 예제에서 변하지 않기 때문에, HUD 생성시 초기화시켜 주도록 하겠습니다.

1. **디자이너** 탭으로 돌아갑니다.

1. Ammo 표시의 두 번째 숫자를 클릭한 다음, **디테일** 패널에서 **Text** 에 **바인드** 클릭 후 **바인딩 생성** 합니다.

1. 그래프가 열리면, **H_MaxAmmo** 변수를 끌어 그래프의 **Return Value** 값에 놓습니다.

		![](UMG_Update21.png)

		그러면 변환 노드가 생성되어 Return Value 입력 핀에 연결됩니다.

1. **디자이너** 탭으로 돌아와 Health Progress Bar 를 다시 클릭합니다.

1. **디테일** 패널의 **Appearance** 아래, Health Bar 에 쓸 색을 선택합니다.

		![](UMG_Update22.png)

1. **Energy** Progress Bar 에도 같은 방법으로 색을 설정해 줍니다.

1. Percent 값을 1.0 으로 설정하면 바의 색을 확인해 볼 수 있습니다 (나중에 0.0 으로 되돌려야 한다는 것만 잊지 마세요).

		![](UMG_Update23.png)

1. **컴파일**, **저장** 후 **GameHUD** 블루프린트를 닫습니다.

[REGION:note]
주: 원하는 색이 나오지 않는 경우, **Style** 아래 변경하면 좋을 옵션이 있을 수도 있습니다.

![](UMG_Update24.png)

엔진 버전 4.5 이후 **Fill Image** 기본값이 주황이 되었습니다. 여기에 보통 흰색 텍스처를 할당하면 잘못된 색이 나오는 문제는 해결할 수 있을 것입니다. 이 문제는 앞으로 있을 업데이트에서 처리될 것입니다.

[/REGION]  
	[/PARAM]
[/OBJECT]
		
[OBJECT:TopicList]
	[PARAM:icon]
		![](%ROOT%/build_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		HUD 표시하기
	[/PARAM]
	[PARAM:description]

이번 마지막 섹션에서는 **MyCharacter** 에서 HUD 가 표시되도록 호출한 다음 기본 **MaxAmmo** 가 표시되도록 할당합니다.

1. **Game/Blueprints** 폴더 안에서, **MyCharacter** 블루프린트를 엽니다.

1. 그래프 아무데나 **우클릭** 한 다음 **Event Begin Play** 노드를 추가합니다.

1.	핀을 끌어 놓은 다음 **Create Widget** 노드를 추가하고 **Class** 를 **GameHUD_C** 로 설정합니다. 

		![](UMG_Update25.png)

1.	P Ammo Max 변수를 끌어놓은 다음 H Max Ammo 입력 핀에 연결합니다.

1.	Create Widget 노드의 **Return Value** 를 끌어 놓은 다음 **변수로 승격** 시켜 **GameHUDWidget** 이라 합니다. 

1.	**Return Value** 를 다시 끌어 놓은 다음 **Add to Viewport** 노드를 추가합니다.

		![](UMG_Update26.png)

		나중에 접근할 수 있도록 Game HUD Widget 에 대한 **변수** 를 생성하고 있습니다.
		
1. **컴파일**, **저장** 후 에디터에서 플레이합니다.

		![](GIF1.gif)(convert:false)

		**F** 키를 누르면 "대미지를 받으며" Health 를 잃는 것이, 점프를 하면 Energy 가 고갈되는 것이,  (0 이 되면 발사가 불가능해지는) 남은 탄약 수가 얼마나 되는지 확인할 수 있습니다.

	[/PARAM]
[/OBJECT]
		
다음 섹션에서는 블록을 쏠 때마다 경험치가 상승되는 경험치 바를 추가해 보겠습니다 (보통은 킬 수라든가 다른 유의미한 게임플레이 상황에 연계시키는 것이 좋겠지만, 이 정도로 그 구성 방식은 충분히 알 수 있을 것입니다). 레벨 업을 하면, 캐릭터에게 슈퍼 점프 능력을 부여하는 "액션 바" 버튼을 사용할 수 있게 될 것입니다.

---

%Steps%





