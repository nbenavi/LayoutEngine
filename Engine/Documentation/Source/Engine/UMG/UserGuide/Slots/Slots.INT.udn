Availability:Public
Title: Slots
Crumbs:%ROOT%, Engine, Engine/UMG, Engine/UMG/UserGuide
Description:An overview of how slots are used in UMG.

[TOC(start:2 end:2)]

## Overview

**Slots** are the invisible glue that binds Widgets together. In Slate they are a lot more explicit, you would first create a **Slot** then choose what control to place inside of it. For **UMG**, you instead have **Panel** Widgets that automatically use the right kind of **Slot** when Child Widgets are added to them. 

Each **Slot** is different, for example, if you were to place a control on a Grid, you would expect to be able to set things like Row and Column. But these properties have no business being on a Widget that was placed on a Canvas. That is where **Slots** come in, a **Canvas Slot** understands how to layout content absolutely and through Anchors, while a **Grid Slot** only understands Row and Column.

## Accessing Slots 

By convention, all **Slot** related properties appear under the **Layout** category in the **Details** panel (yellow box below). 

![](SlotLayout.png)

You will also notice that the type of **Slot** being used by your Widget is displayed in parentheses (green arrow above). 

### Setting Layout Properties

At runtime, to modify properties under **Layout**, you can access the **Slot** member of the Widget in **Blueprint** or C++ and then **Cast** it to the correct **Slot Type**. Once doing so, you will then be able to modify the properties, an example of which is indicted below. 

![](SlotCast.png)

Above, a **Vertical Box** entitled **GameTitleBox** has been placed on a **CanvasPanel**. By getting the **Slot** associated with the **Vertical Box** and **Casting** to the **CanvasPanelSlot** type, we are then able to set the position of the box when our "StartButton" is clicked. 

[REGION:note]
Currently in **Blueprints**, only SETTER nodes are exposed. If you need to GET properties from the **Layout**, you may want to create a Variable to store your property and upon **Event Construct**, **SET** your **Layout** property via your Variable so that you have reference to and can access it later.

[/REGION]

