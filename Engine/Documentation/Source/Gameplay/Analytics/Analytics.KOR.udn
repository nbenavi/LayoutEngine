INTSourceChangelist:2426297
Availability:Public
Title:게임내 분석
Crumbs: %ROOT%, Gameplay
Description:게임내 분석을 사용하여 플레이어 관련된 일이나 밸런스 문제를 찾아내는 법입니다.

[TOC (start:2 end:2)]

## 개요
게임이 어떻게 돌아가는지에 대한 데이터를 구하기 위해서는, 분석(analytics) 제공자를 사용하여 프로세스와 데이터를 캡처해야 합니다. 자체적인 솔루션이 없는 분들은, 무료는 물론 유료 서비스까지 
선택할 수 있는 옵션이 많습니다. 언리얼 엔진에서는 하나 이상의 분석 제공자와의 통신용 추상 인터페이스를 제공합니다. 게임에서는 인터페이스를 사용하고, 
분석 제공자는 지원(backing) 구현을 제공합니다. 어떤 경우에는, 에픽이 이미 지원 제공자를 만든 경우가 있습니다. 4.5 버전 이전 에픽에서는 멀티캐스트 분석 이벤트로의 구현을 제공하여, 
다수의 제공자에 연계해 줬습니다. 제공자의 경우 유료인 [Swrve](http://www.swrve.com) 를 지원하는 제공자 지원이 있었고, 4.5 이후에는 
iOS 에서 무료인 [Apsalar](http://www.apsalar.com) 와, 주로 디버깅에 사용되는 파일 기반 시스템을 제공했었습니다. 서서히 사용할 수 있는 제공자 플러그인이 늘어날 것이며,
필요한 경우 자체적인 제공자를 추가하는 것도 가능합니다.

## 게임 준비하기
플레이어 유지(retention) 데이터 캡처를 위한 첫 단계는, 게임에 쓸 분석 제공자를 등록하는 것입니다. 이 작업은 프로젝트의 `DefaultEngine.ini` 파일을 통해 이루어집니다. 기본 제공자를 등록해야 합니다.
옵션으로, 게임의 다른 빌드 유형(development, testing, production 등)에 대해 각기 다른 제공자와 계정 세부사항을 등록할 수 있습니다. 
아래는 Apsalar 플러그인 환경설정 예제입니다:

	[Analytics]
	ProviderModuleName=IOSApsalar
	ApiKey=YourAnalyticsKey1
	ApiSecret=YourAnalyticsSecret1
	SendInterval=60

	[AnalyticsDevelopment]
	ApiKey=YourAnalyticsKey2
	ApiSecret=YourAnalyticsSecret2
	SendInterval=60

	[AnalyticsTest]
	ApiKey=YourAnalyticsKey3
	ApiSecret=YourAnalyticsSecret4
	SendInterval=60

`[Analytics]` 부분이 기본으로 사용되어 기본 제공자 모듈 이름을 설정하는 곳입니다. 위에서는 4.5 릴리즈의 일부인 IOSApsalar 플러그인으로 설정되어 있습니다.
`ApiKey` 와 `ApiSecret` 칸은 Apsalar 웹사이트에서 온 것입니다. 계정을 생성하고나면, 사용할 키와 비번을 줄 것입니다.

프로젝트에 그 환경설정을 마치고나면, 분석 이벤트 녹화 준비가 다 됐습니다. 기본적인 플레이어 유지 데이터만 구하려면, 게임 시작시 세션을 생성한 다음 백그라운드로 가게 되면 끝내줘야 합니다. 
이 작업은 아래와 같은 코드를 통해서, 또는 4.5 버전 이상에서 제공되는 [블루프린트 분석 플러그인](Gameplay/Analytics/Blueprints) 을 통해 
가능합니다:

	FAnalytics::Get().GetDefaultConfiguredProvider()->StartSession();
	FAnalytics::Get().GetDefaultConfiguredProvider()->EndSession();

위와 같은 호출을 게임의 일부로 두면, 플레이어 유지 데이터 수집이 자동으로 시작될 것입니다. 기본적인 플레이어 유지 데이터를 구한 이후에는, 이벤트를 추가하여 
게임 내 플레이어의 행위에 대해 더욱 자세한 정보를 얻기 시작할 수 있습니다.
